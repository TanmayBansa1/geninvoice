// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(cuid())
  clerkId     String    @unique
  email       String    @unique
  firstName   String?
  lastName    String?
  name        String?
  address     String?
  imageUrl    String?
  invoices    Invoice[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Invoice {
  id          String        @id @default(cuid())
  invoiceName String
  sno         Int
  status      InvoiceStatus @default(PENDING)
  currency    String
  dueDate     Int
  date        DateTime
  fromName    String
  fromEmail   String
  fromAddress String
  toName      String
  toEmail     String
  toAddress   String
  note        String?
  discount    Float         @default(0)
  tax         Float         @default(0)
  subtotal    Float         @default(0)
  total       Float         @default(0)
  items       InvoiceItem[]
  user        User          @relation(fields: [userId], references: [id])
  userId      String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  @@unique([sno, userId])
}

model InvoiceItem {
  id          String   @id @default(cuid())
  description String
  quantity    Float
  price       Float
  amount      Float
  invoice     Invoice  @relation(fields: [invoiceId], references: [id])
  invoiceId   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum InvoiceStatus {
  PAID
  PENDING
  DRAFT
}
